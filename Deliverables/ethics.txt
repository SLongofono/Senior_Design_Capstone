Introduction
This section outlines a number of ethical concerns that should be considered before using our work in a production setting.  The main concern is that our work is not ready for a production setting.  Our processor is very much a prototype, and as such will not be effective under many of the conditions that a production processor might be.  This project was an exploration of what we could do with the RISC-V ISA and should be treated as such in any application of our work.

Assumptions and Testing conditions
Our work closely follows the Von-Neumann architecture for a serial RISC-V processor as laid out in Hennessey and Patterson's Computer Architecture: A Quantitative Approach.  We did our testing with the Vivado development suite, using their built-in simulator and CAD tools.  The implicit assumption in all our designs is that the system clock is running at the Nexys4 reference clock frequency of 100MHz.  To test our work, we built a testbench in Vivado to feed in instructions one after another and write the results back to the register file.  We also built a debugger unit which wrote results to a UART terminal to verify our implementation on hardware.  Beyond this, we did very little additional testing.  As such, our work is not appropriate for any critical application, or any application where correct results matter.  We had limited development time, so we opted against unit testing after the ALU was complete.

Known Defects and Usage Notes
Our system is incomplete, so many of the features that one might expect have yet to be implemented.  Our system does not implement atomic or floating point operations, both of which are normally required for running Linux.  Our system bus and MMU have some limitations due to the way the RAM and ROM are interfaced on the Nexys4; every instruction read from and written back to RAM and ROM must be completed in 4 smaller parts.  This effectively cuts the performance of our processor by 75\%.

End User concerns
The end user is expected to have sufficient techincal knowledge to understand an develop computer architecture at the RTL level.  All of our documentation is directed at users of this level.  In many cases, we have completely omitted documentation and comments, in the style of Linux system programmers.  It stands to reason that our work is not appropriate for use by the general public, but we state it explcitly here in case anyone tries to use our work.  This work is provided as open source under the MIT license.
